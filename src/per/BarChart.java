package per;


import java.awt.Font;
 
import java.util.ArrayList;
import java.util.Collections;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 * 绘制柱状图工具类
 *
 */
public class BarChart {
    ChartPanel frame1;
    static StrPro strPro=new StrPro();
    static DoFile doFile=new DoFile();
    public  BarChart(){
        CategoryDataset dataset = getDataSet();
        JFreeChart chart = ChartFactory.createBarChart3D(
                             "四则运算测试结果图表", // 图表标题
                            "测试轮/次", // 目录轴的显示标签
                            "题数", // 数值轴的显示标签
                            dataset, // 数据集
                            PlotOrientation.VERTICAL, // 图表方向：水平、垂直
                            true,           // 是否显示图例(对于简单的柱状图必须是false)
                            false,          // 是否生成工具
                            false           // 是否生成URL链接
                            );
         
        //从这里开始
        CategoryPlot plot=chart.getCategoryPlot();//获取图表区域对象
        CategoryAxis domainAxis=plot.getDomainAxis();         //水平底部列表
         domainAxis.setLabelFont(new Font("黑体",Font.BOLD,14));         //水平底部标题
         domainAxis.setTickLabelFont(new Font("宋体",Font.BOLD,12));  //垂直标题
         ValueAxis rangeAxis=plot.getRangeAxis();//获取柱状
         rangeAxis.setLabelFont(new Font("黑体",Font.BOLD,15));
          chart.getLegend().setItemFont(new Font("黑体", Font.BOLD, 15));
          chart.getTitle().setFont(new Font("宋体",Font.BOLD,20));//设置标题字体
           
          //到这里结束，虽然代码有点多，但只为一个目的，解决汉字乱码问题
           
         frame1=new ChartPanel(chart,true);        //这里也可以用chartFrame,可以直接生成一个独立的Frame

    }
    private static CategoryDataset getDataSet() {
    	DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        dataset.addValue(100, "总题数", "第一轮");
//        dataset.addValue(100, "正确数", "第一轮");
//        //dataset.addValue(100, "广州", "第一轮");
//	   
//	   dataset.addValue(200, "总题数", "第二轮");
//	   dataset.addValue(200, "正确数", "第二轮");
//	   //dataset.addValue(200, "广州", "第二轮");
//	   
//	   dataset.addValue(300, "总题数", "第三轮");
//	   dataset.addValue(300, "正确数", "第三轮");
//	   //dataset.addValue(300, "广州", "第三轮");
//	   
//	   dataset.addValue(400, "总题数", "第四轮");
//	   dataset.addValue(400, "正确数", "第四轮");
//	   //dataset.addValue(400, "广州", "第四轮");
//	   
//	   dataset.addValue(500, "总题数", "第五轮");
//	   dataset.addValue(500, "正确数", "第五轮");
//	   //dataset.addValue(500, "广州", "第五轮");
	   
	   ArrayList<String> score=new ArrayList<String>();
	   String[] data=new String[2];
	   score=doFile.readLastNLine("./static.txt",5);
	   Collections.reverse(score);
	   int count=1;
	   for(String st:score){
		   data=strPro.StrSplitScore(st);
		   dataset.addValue(Integer.parseInt(data[1]), "总题数", "第"+count+"轮");
		   dataset.addValue(Integer.parseInt(data[0]), "正确数", "第"+count+"轮");
		   count++;
	   }
       return dataset;
    }
	public ChartPanel getChartPanel(){
		return frame1;
	}
}